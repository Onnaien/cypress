{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my help site","text":"<p>On this site I note down things I want to remember about tools and usage</p>"},{"location":"bash/","title":"Bash","text":"<pre><code>alias a='alias'\nalias cdbouvet='cd ~/OneDrive\\ -\\ Bouvet\\ Norge\\ AS'\nalias cdcodeins='cd /c/git/insubsea-web/cypress/integration/'\nalias cypupdatebashrc='source ~/.bashrc'\nalias editbashrc='npp ~/.bashrc'\nalias gitfilechanges='git log -p'\nalias gitfileschanged='git show --stat'\nalias gitlistbranches='git branch -a --list origin/test/*'\nalias gitpop='git stash pop'\nalias gitpull='git pull --rebase origin master'\nalias ll='ls -l'\nalias ls='ls -F --color=auto --show-control-chars'\nalias node='winpty node.exe'\nalias npp='start notepad++.exe'\nalias pop='gitpop'\nalias pull='gitpull'\nalias stash='git stash'\n</code></pre>"},{"location":"frontEnd/","title":"Front end development","text":""},{"location":"frontEnd/#links","title":"Links","text":"<p>Josh Comeau</p>"},{"location":"frontEnd/#courses","title":"Courses","text":""},{"location":"frontEnd/#css","title":"CSS","text":"<p>CSS for JavaScript Developers</p>"},{"location":"frontEnd/#react","title":"React","text":"<p>The Joy of React</p> <p>Workshop: Praktisk React med Typescript</p>"},{"location":"frontEnd/#notes","title":"Notes","text":"<p>Recommendation for combining the <code>CSS for JavaScript Developers</code> and <code>The Joy of React</code> courses:</p> <p></p>"},{"location":"powershell/","title":"Powershell","text":""},{"location":"powershell/#store-your-powershell-profile-in-a-git-repo-using-symbolic-links","title":"Store your powershell profile in a git repo using symbolic links","text":"<p>Ref. Use symlinks to version-control your PowerShell profile with Git</p> <p>This can be useful if you want to share the same powershell profile on different computers/enironments.</p> <p>In order to use powershell profile, remote signed policy is needed:</p> <pre><code>get-executionpolicy\nRemoteSigned\n</code></pre> <p>Create a repo named something like <code>my-powershell-setup</code></p> <p>Add <code>symlink.ps1</code> script like:</p> <pre><code># Avoiding drive letter to cope with using c on one computer and d on another:\n$gitRepoPath = \"/git/my-powershell-setup/\"\n$symlinkParams = @{\n  Path = $PROFILE\n  Value = \"$gitRepoPath/PowerShell/Microsoft.PowerShell_profile.ps1\"\n  ItemType = 'SymbolicLink'\n  Force = $true\n}\nNew-Item @symlinkParams\n</code></pre> <p>Create a (most likely copy your existing) powershell profile in the repo:</p> <pre><code>./PowerShell/Microsoft.PowerShell_profile.ps1\n</code></pre> <p>Run the symlink script in powershell admin mode: </p>"},{"location":"powershell/#prompt-line","title":"prompt line","text":"<pre><code>winget install --id JanDeDobbeleer.OhMyPosh\ncode $PROFILE\n</code></pre> <p>Add these lines to the file:</p> <pre><code>#-----------------------------------------------------------\n# Prompt theme engine\n# https://ohmyposh.dev/\n#-----------------------------------------------------------\n#Import-Module posh-git\n# interesting themes: cobalt2 multiverse-neon peru powerlevel10k_rainbow\n#oh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\the-unnamed.omp.json\" | Invoke-Expression\n#oh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\powerlevel10k_rainbow.omp.json\" | Invoke-Expression\n#oh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\paradox.omp.json\" | Invoke-Expression\noh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\multiverse-neon.omp.json\" | Invoke-Expression\n</code></pre>"},{"location":"powershell/#commands-history","title":"commands history","text":"<pre><code>#-----------------------------------------------------------\n# Scrolling/searching through history\n#-----------------------------------------------------------\nImport-Module PSReadLine\nSet-PSReadLineOption -PredictionSource HistoryAndPlugin\nSet-PSReadLineOption -PredictionViewStyle ListView\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward\nSet-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward\n</code></pre>"},{"location":"powershell/#profile","title":"profile","text":"<pre><code>#Import-Module -Name AzureADPreview -UseWindowsPowershell\n\n#-----------------------------------------------------------\n# Prompt theme engine\n# https://ohmyposh.dev/\n#-----------------------------------------------------------\nImport-Module posh-git\noh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\paradox.omp.json\" | Invoke-Expression\n\n#-----------------------------------------------------------\n# Scrolling/searching through history\n#-----------------------------------------------------------\nImport-Module PSReadLine\nSet-PSReadLineOption -PredictionSource HistoryAndPlugin\nSet-PSReadLineOption -PredictionViewStyle ListView\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward\nSet-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward\n\n\n#-----------------------------------------------------------\n# Winget auto completer\n# https://github.com/microsoft/winget-cli/blob/master/doc/Completion.md\n#-----------------------------------------------------------\nRegister-ArgumentCompleter -Native -CommandName winget -ScriptBlock {\n    param($wordToComplete, $commandAst, $cursorPosition)\n        [Console]::InputEncoding = [Console]::OutputEncoding = $OutputEncoding = [System.Text.Utf8Encoding]::new()\n        $Local:word = $wordToComplete.Replace('\"', '\"\"')\n        $Local:ast = $commandAst.ToString().Replace('\"', '\"\"')\n        winget complete --word=\"$Local:word\" --commandline \"$Local:ast\" --position $cursorPosition | ForEach-Object {\n            [System.Management.Automation.CompletionResult]::new($_, $_, 'ParameterValue', $_)\n        }\n}\n\n#-----------------------------------------------------------\n# General aliases/overview\n#-----------------------------------------------------------\nfunction Get-MyAliases {\n    Get-Alias gloc, cypa, ggit, opprof, opnpp, path\n}\nNew-Alias a Get-MyAliases\n#-----------------------------------------------------------\nfunction Set-Title {\n    param(\n        [string]\n        $title\n    )\n    $Host.UI.RawUI.WindowTitle = $title\n}\n#-----------------------------------------------------------\nfunction Open-MyPowershellProfile {\n    code $PROFILE\n}\nNew-Alias opprof Open-MyPowershellProfile\n#-----------------------------------------------------------\nfunction Open-NotepadPlusPlus {\n    start notepad++.exe\n}\nNew-Alias opnpp Open-NotepadPlusPlus\n#-----------------------------------------------------------\nfunction Get-MyPathListedOnePerLine {\n    $Env:Path.split(\";\")\n}\nNew-Alias path Get-MyPathListedOnePerLine\n\n#-----------------------------------------------------------\n# Location aliases\n#-----------------------------------------------------------\nfunction Get-MyLocationAliases {\n    Get-Alias slprix, slgit, slprixtest\n}\nNew-Alias gloc Get-MyLocationAliases\n#-----------------------------------------------------------\n#-----------------------------------------------------------\nfunction Set-LocationGit {\n    Set-Location c:\\git\\\n}\nNew-Alias g Set-LocationGit\n\n#-----------------------------------------------------------\n# Git aliases\n#-----------------------------------------------------------\n#-----------------------------------------------------------\nfunction Get-GitBranch {\n    git branch\n}\nNew-Alias b Get-GitBranch\n#-----------------------------------------------------------\nfunction Remove-Branch {\n    git branch --show-current| ForEach-Object { &amp; git checkout master &amp;&amp; git branch -d $_ &amp;&amp; git pull }\n}\nNew-Alias deleteBranch Remove-Branch\n#-----------------------------------------------------------\nfunction Remove-Branch-Main {\n    git branch --show-current| ForEach-Object { &amp; git checkout main &amp;&amp; git branch -d $_ &amp;&amp; git pull }\n}\nNew-Alias deleteBranchMain Remove-Branch-Main\n#-----------------------------------------------------------\n#-----------------------------------------------------------\nfunction Get-MyGitAliases {\n    Get-Alias ggitv, istash, ipop, uPullMaster, uPullMain | Format-Table -AutoSize\n}\nNew-Alias ggit Get-MyGitAliases\n#-----------------------------------------------------------\n#-----------------------------------------------------------\nfunction Get-GitLogTree {\n    git log --all --graph --decorate --oneline\n}\nNew-Alias logtree Get-GitLogTree\nNew-Alias l Get-GitLogTree\n#-----------------------------------------------------------\n#-----------------------------------------------------------\nfunction Get-GitVersion {\n    git --version\n}\nNew-Alias ggitv Get-GitVersion\n#-----------------------------------------------------------\nfunction Invoke-MyGitStash {\n    git stash\n}\nNew-Alias istash Invoke-MyGitStash\n#-----------------------------------------------------------\nfunction Invoke-MyGitPop {\n    git stash pop\n}\nNew-Alias ipop Invoke-MyGitPop\nfunction Push-Branch {\n    git branch --show-current| ForEach-Object { &amp; git push --set-upstream origin $_ }\n}\nNew-Alias pushBranch Push-Branch\n\n#-----------------------------------------------------------\nfunction Get-GitStatus {\n    git status\n}\nNew-Alias s Get-GitStatus\n#-----------------------------------------------------------\nfunction Set-TitleBranch {\n    $Host.UI.RawUI.WindowTitle = git branch --show-current\n}\nNew-Alias t Set-TitleBranch\n#-----------------------------------------------------------\nfunction Update-MyGitBranchPullAndRebaseMaster {\n    git pull --rebase origin master\n}\nNew-Alias uPullMaster Update-MyGitBranchPullAndRebaseMaster\n#-----------------------------------------------------------\nfunction Update-MyGitBranchPullAndRebaseMain {\n    git pull --rebase origin master\n}\nNew-Alias uPullMain Update-MyGitBranchPullAndRebaseMain\n\n#-----------------------------------------------------------\n# Cypress aliases\n#-----------------------------------------------------------\nfunction Get-MyCypressAliases {\n    Get-Alias cypopendev, cypopentest, cyprundev, cypruntest\n}\nNew-Alias cypa Get-MyCypressAliases\n#-----------------------------------------------------------\n#-----------------------------------------------------------\nfunction Open-CypressGui-Dev {\n    npx cypress open\n}\nNew-Alias cypopendev Open-CypressGui-Dev\n#-----------------------------------------------------------\n</code></pre>"},{"location":"tools/","title":"Tools","text":""},{"location":"tools/#introduction","title":"Introduction","text":"<p>Tools and tool tips</p>"},{"location":"tools/#github-cli","title":"github cli","text":"<p>Check if installed:</p> <pre><code>winget list --id GitHub.cli\n</code></pre> <p>If result is \"No installed package found matching input criteria.\", install by:</p> <pre><code>winget install --id GitHub.cli\n</code></pre> <p>Check gh auth status:</p> <pre><code>gh auth status\n</code></pre> <p>Ok status should look something like this:</p> <p></p> <p>If error message, start interactive gh auth login by:</p> <pre><code>gh auth login\n</code></pre>"},{"location":"tools/#winget","title":"winget","text":"<p>winget to install and upgrade tools</p>"},{"location":"tools/#add-completion-to-winget","title":"add completion to winget","text":"<p>https://github.com/microsoft/winget-cli/blob/master/doc/Completion.md</p>"},{"location":"tools/#examples-of-winget-usage","title":"examples of winget usage","text":"<pre><code>winget list --id\nwinget list --name\nwinget install --id\nwinget upgrade --id\nwinget upgrade\n</code></pre>"},{"location":"tools/#npm","title":"npm","text":""},{"location":"tools/#optional-npm-add-on","title":"Optional npm add-on","text":"<p>If you run npm commands very often, install this module globally to make life easier, ref. organizing npm scripts and npm-quick-run:</p> <pre><code>npm i -g npm-quick-run\n</code></pre> <p>npm check updates <pre><code>npm install -g npm-check-updates\n</code></pre></p>"},{"location":"tools/#mkdocs-material","title":"mkdocs material","text":"<p>mkdocs-material</p>"},{"location":"cypress-course/cypress-course/","title":"Introduction to Cypress course","text":""},{"location":"cypress-course/cypress-course/#introduction","title":"Introduction","text":"<p>This was a help site when running the learn.cypress.io course for mostly non-developers. Just kept for reference.</p> <p>We start by installing tools that are needed to run the course. This part is replacing the part in the course that describe needed tool installation. The reason for replacing it, is to try to create a more complete and easy to follow installation guide. The installation is based on using windows terminal as the cmd line tool. Winget is used as the main installation tool.</p>"},{"location":"cypress-course/cypress-course/#windows-terminal","title":"Windows terminal","text":"<p>Open a windows terminal window like this and select \"Powershell\":</p> <p></p>"},{"location":"cypress-course/cypress-course/#visual-studio-code","title":"visual studio code","text":"<p>Check if already installed:</p> <pre><code>winget list --id Microsoft.VisualStudioCode\n</code></pre> <p>If not already installed, you can install by running:</p> <pre><code>winget install --id Microsoft.VisualStudioCode\n</code></pre>"},{"location":"cypress-course/cypress-course/#nodejs","title":"NodeJS","text":"<p>Check if you have NodeJs installed</p> <pre><code>node -v\n</code></pre> <p>If it is installed you get information about what version is installed. Now goto the download page and select the LST version, download and install IF you did not get any results from the command above or have an older version installed: https://nodejs.org/en/</p>"},{"location":"cypress-course/cypress-course/#git","title":"git","text":"<p>Check if you have git installed</p> <pre><code>git --version\n</code></pre> <p>If not installed, install by:</p> <pre><code>winget install --id Git.Git\n</code></pre>"},{"location":"cypress-course/cypress-course/#github-cli","title":"github cli","text":"<p>Check if installed:</p> <pre><code>winget list --id GitHub.cli\n</code></pre> <p>If result is \"No installed package found matching input criteria.\", install by:</p> <pre><code>winget install --id GitHub.cli\n</code></pre> <p>Check gh auth status:</p> <pre><code>gh auth status\n</code></pre> <p>Ok status should look something like this:</p> <p></p> <p>If error message, start interactive gh auth login by:</p> <pre><code>gh auth login\n</code></pre>"},{"location":"cypress-course/cypress-course/#cypress-course-code-installation","title":"Cypress course code installation","text":"<p>Now you need to go to the folder where you want to download git repositories Here is an example on how to go to the c:\\ folder and create a \"git-repos\" folder:</p> <pre><code>cd c:\\\\n\nmd git-repos\n</code></pre> <p>Goto folder where you want the course repo downloaded and clone the course repo.</p> <pre><code>cd c:/git-repos\ngh repo clone cypress-io/cypress-realworld-testing-course-app -- --branch start\n</code></pre> <p>Goto the project folder and install the npm modules needed to run the application:</p> <pre><code>cd cypress-realworld-testing-course-app\ndel package-lock.json\nnpm install\n</code></pre> <p>The del (delete) command above is added to fix something that seems to be an inconsistency (I will add and issue on the course repo). The file is regenerated by the npm install command.</p> <p>Add cypress to the app project:</p> <pre><code>npm install cypress --save-dev\n</code></pre> <p>Open the project files in Visual studio code:</p> <pre><code>code .\n</code></pre> <p>The course instruct to run command line commands in terminal windows in Visual Studio Code. The terminal windows included in Visual Studio Code is basically doing the same job as the \"standalone\" terminal window we have used in this guideline.</p> <p>Now it is time to start the application you are going to test against:</p> <pre><code>npm run dev\n</code></pre> <p>Now the application has started and you cannot run any more commands in your command window until the application has been stopped:</p> <p></p> <p>So then we open a new terminal window to run other commands:</p> <p></p> <p>and go to the project folder:</p> <p></p> <p>You will use this terminal window when you soon in the course are asked to open the cypress test gui by running this command:</p> <p></p> <p>Now it is time to open the application you have started in the browser by entering localhost:3000 in the address bar:</p> <p></p> <p>The preparations for the course are done, and now you should head over to and follow the course documentation frome here:</p> <p>Start course from here</p>"},{"location":"cypress-course/cypress-course/#tips-and-recommendations","title":"Tips and recommendations","text":""},{"location":"cypress-course/cypress-course/#winget","title":"winget","text":"<p>We use winget to install and upgrade tools</p>"},{"location":"cypress-course/cypress-course/#add-completion-to-winget","title":"add completion to winget","text":"<p>https://github.com/microsoft/winget-cli/blob/master/doc/Completion.md</p>"},{"location":"cypress-course/cypress-course/#windows-terminal-administrator-mode","title":"Windows terminal administrator mode","text":"<p>If you are asked to run windows terminal in administrator mode:</p> <p></p>"},{"location":"cypress-course/cypress-course/#examples-of-winget-usage","title":"examples of winget usage","text":"<p>check what is installed and upgrade examples (just to give an idea of what it can be used for):</p> <p></p>"},{"location":"cypress-course/cypress-course/#nvm-tool-can-be-installed-if-you-need-to-switch-between-several-versions-of-node","title":"nvm tool can be installed if you need to switch between several versions of node","text":"<p>Install nvm:</p> <pre><code>winget install --id CoreyButler.NVMforWindows\n</code></pre>"},{"location":"cypress-course/cypress-course/#node-installation-by-using-nvm-including-npm-tool-for-cypress-course-latest-long-term-support","title":"node installation by using nvm (including npm tool) for Cypress course (latest Long Term Support)","text":"<p>NB! you need to start windows terminal in admin mode to run this installation</p> <p>Install latest verson of Long Time Support version of node:</p> <pre><code>nvm install lts\n</code></pre>"},{"location":"cypress-course/cypress-course/#optional-npm-add-on","title":"Optional npm add-on","text":"<p>If you run npm commands very often, install this mo dule globally to make life easier, ref. organizing npm scripts and npm-quick-run:</p> <pre><code>npm i -g npm-quick-run\n</code></pre>"},{"location":"cypress-course/cypress-course/#windows-powershell-addons","title":"windows powershell addons","text":"<pre><code>winget install --id JanDeDobbeleer.OhMyPosh\ncode $PROFILE\n</code></pre> <p>Add these lines to the file:</p> <pre><code>#-----------------------------------------------------------\n# Prompt theme engine\n# https://ohmyposh.dev/\n#-----------------------------------------------------------\nImport-Module posh-git\noh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\paradox.omp.json\" | Invoke-Expression\n\n#-----------------------------------------------------------\n# Scrolling/searching through history\n#-----------------------------------------------------------\nImport-Module PSReadLine\nSet-PSReadLineOption -PredictionSource HistoryAndPlugin\nSet-PSReadLineOption -PredictionViewStyle ListView\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineOption -EditMode Windows\nSet-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward\nSet-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward\n</code></pre> <p>You will get a nice informal command prompt and history features when writing a command.</p> <p>You see the path you are located in, the git branch name (start) and the last \"cd\" command you ran:</p> <p></p>"},{"location":"cypress-resources/cypress/","title":"Cypress","text":"<ul> <li>cypress.io</li> <li>Cypress documentation and guides</li> </ul>"},{"location":"cypress-resources/cypress/#useful-modules","title":"Useful modules","text":""},{"location":"cypress-resources/cypress/#cypressgrep","title":"@cypress/grep","text":"<p>Used to filter the tests to be run</p>"},{"location":"cypress-resources/cypress/#cy-verify-downloads","title":"cy-verify-downloads","text":"<p>Used in download tests</p>"},{"location":"cypress-resources/cypress/#cypress-plugin-api","title":"cypress-plugin-api","text":"<p>Using cy.api() instead of cy.request() to get more (and prettier?) information when run from GUI.</p>"},{"location":"cypress-resources/cypress/#cypress-real-events","title":"cypress-real-events","text":"<p>Using cy.realType() instead of cy.type() helps solving some issues when using cy.type()</p>"},{"location":"cypress-resources/cypress/#start-server-and-test","title":"start-server-and-test","text":"<p>Used to make local tests more efficient starting and stopping server etc.</p> <p>This is not a cypress module, but are used when running cypress tests locally.</p> <p>See module documentation for further info.</p>"},{"location":"cypress-resources/cypress/#typescript","title":"typescript","text":"<p>Needed to use typescript in Cypress</p>"},{"location":"cypress-resources/cypress/#trainingcourses","title":"Training/courses","text":""},{"location":"cypress-resources/cypress/#cypressio","title":"Cypress.io","text":"<p>This course looks very promising starting from scratch and explaining \"everything\" on the way:</p> <ul> <li>Real World Testing with Cypress</li> </ul>"},{"location":"cypress-resources/cypress/#test-automation-university","title":"Test Automation University","text":""},{"location":"cypress-resources/cypress/#general-and-introduction","title":"General and introduction","text":"<p>These courses give you a general foundation and overview of the building blocks cypress testing consist of:</p> <ul> <li>https://testautomationu.applitools.com/setting-a-foundation-for-successful-test-automation/</li> <li>https://testautomationu.applitools.com/javascript-tutorial/</li> <li>https://testautomationu.applitools.com/automating-in-the-browser-using-javascript/</li> <li>https://testautomationu.applitools.com/mocha-javascript-tests/</li> <li>https://testautomationu.applitools.com/chai-test-assertions/</li> <li>https://testautomationu.applitools.com/cypress-tutorial/</li> </ul> <p>The courses mentioned above are the first 6 ones listed in the Web UI JavaScript Path:</p> <p></p> <p></p>"},{"location":"cypress-resources/cypress/#advancedothers","title":"Advanced/others","text":"<ul> <li>https://testautomationu.applitools.com/advanced-cypress-tutorial/</li> <li>https://testautomationu.applitools.com/cypress-with-typescript/</li> </ul>"},{"location":"cypress-resources/cypress/#api-testing","title":"API testing","text":"<ul> <li>https://applitools.com/event/test-your-api-with-cypress/</li> <li>https://www.youtube.com/watch?v=mPZJdAH1alc</li> </ul>"},{"location":"cypress-resources/cypress/#ambassadoursexperts","title":"Ambassadours/experts","text":""},{"location":"cypress-resources/cypress/#filip-hric","title":"Filip Hric","text":"<ul> <li>frequently new cypress tips on his blog</li> <li>courses</li> <li>workshops</li> </ul>"},{"location":"cypress-resources/cypress/#gleb-bahmutov","title":"Gleb Bahmutov","text":"<ul> <li>cypress.tips</li> </ul>"},{"location":"git/git/","title":"Git","text":"<p>autocomplete</p>"},{"location":"git/git/#rebase","title":"rebase","text":"<p>git-rebase</p>"},{"location":"git/git/#basing-new-branch-on-another-that-is-not-merged-yet","title":"basing new branch on another that is not merged yet","text":"<p>You have finished the \"next\" branch, created a pr that is not approved yet and started working on topic:</p> <p></p> <p>Then after \"next\" pr has been approved and merged into \"master\", you can move the \"topic\" branch to be rebased on \"master\" like this:</p> <p></p>"},{"location":"git/git/#rebase-part-of-branch-to-be-merged-into-master","title":"rebase part of branch to be merged into \"master\"","text":""}]}